#include <iostream>
#include <vector>
#include <string>

using namespace std;

class Information {
private:
    string name;
    string phoneNumber;

public:
    Information(const string& name, const string& phoneNumber) : name(name), phoneNumber(phoneNumber) {}

    bool Check(const vector<Information>* infoList, const string* namePtr, const string* phoneNumberPtr) {
        for (const auto& info : *infoList) {
            if (info.name == *namePtr && info.phoneNumber == *phoneNumberPtr) {
                return true;
            }
        }
        return false;
    }
    void setName(const string& newName) {
        name = newName;
    }

    void setPhoneNumber(const string& newPhoneNumber) {
        phoneNumber = newPhoneNumber;
    }

    const string& getName() const {
        return name;
    }

    const string& getPhoneNumber() const {
        return phoneNumber;
    }
};

int main() {
    vector<Information> members;
    int choice;

    do {
        cout << "***** SWING 회원 정보 관리 프로그램 *****\n" << endl;
        cout << "1. 회원가입" << endl;
        cout << "2. 로그인" << endl;
        cout << "3. 회원 정보 수정" << endl;
        cout << "4. 종료" << endl << endl;
        cout << "\n번호를 입력하세요: ";
        cin >> choice;


        switch (choice) {
            case 1: {
                cout << "\n***** 회원가입을 진행합니다 *****\n\n";
                string name, phoneNumber;
                cout << "이름을 입력하세요: ";
                cin >> name;
                cout << "전화번호를 입력하세요: ";
                cin >> phoneNumber;
                members.push_back(Information(name, phoneNumber));
                cout << "\n회원가입이 완료되었습니다.\n" << endl;
                break;
            }
            case 2: {
                cout << "\n***** 로그인을 진행합니다 *****\n\n";
                string name, phoneNumber;
                cout << "이름을 입력하세요: ";
                cin >> name;
                cout << "전화번호를 입력하세요: ";
                cin >> phoneNumber;
                Information info("", "");
                if (info.Check(&members, &name, &phoneNumber)) {
                    cout << "\n로그인이 완료되었습니다.\n" << endl;
                    cout << "\n☆★☆★☆★ SWING " << name << "님을 응원합니다 ☆★☆★☆★\n";
                }
                else {
                    cout << "\n회원 정보가 일치하지 않습니다.\n" << endl;
                }
                break;
            }
            case 3: {
                cout << "\n***** 회원 정보 수정을 진행합니다 *****\n\n";
                string name, phoneNumber;
                cout << "이름을 입력하세요: ";
                cin >> name;
                cout << "전화번호를 입력하세요: ";
                cin >> phoneNumber;
                bool found = false;
                for (auto& member : members) {
                    if (member.Check(&members, &name, &phoneNumber)) {
                        string newName, newPhoneNumber;
                        cout << "새로운 이름을 입력하세요: ";
                        cin >> newName;
                        cout << "새로운 전화번호를 입력하세요: ";
                        cin >> newPhoneNumber;
                        member.setName(newName);
                        member.setPhoneNumber(newPhoneNumber);
                        cout << "회원 정보가 수정되었습니다." << endl;
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    cout << "회원 정보를 찾을 수 없습니다." << endl;
                }
                break;
            }
            case 4: {
                cout << "프로그램을 종료합니다." << endl;
                break;
            }
            default:
                cout << "잘못된 입력입니다. 다시 입력해주세요." << endl;
                break;
        }
    } while (choice != 4);

    return 0;
}
